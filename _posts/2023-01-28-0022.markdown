---
layout: post
title:  "Getting gud with Go (resources)"
date:   2023-01-15T00:00:00+00:00
tags: [sweng]
published: false
---



## Links

- [Cloud Native Go: Building Reliable Services in Unreliable Environments](https://www.oreilly.com/library/view/cloud-native-go/9781492076322/)
- [Google's Style Guide](https://google.github.io/styleguide/go/)
- [Uber's Style Guide](https://github.com/uber-go/guide/blob/master/style.md)
- [How to write Docstrings](https://go.dev/doc/comment)
- [100 Go Mistakes and How to Avoid Them (github)](https://github.com/teivah/100-go-mistakes)
- [100 Go Mistakes and How to Avoid Them (book)](https://www.manning.com/books/100-go-mistakes-and-how-to-avoid-them)
- [Effective Go](https://go.dev/doc/effective_go)
- [The Go Memory Model](https://go.dev/ref/mem)
- [Refactoring Guru's Design Patterns in Go](https://refactoring.guru/design-patterns/go)
- [Go Beyond Blog](https://www.gobeyond.dev/)
- [Improving Google's B-Tree with Generics](https://www.scylladb.com/2022/04/27/shaving-40-off-googles-b-tree-implementation-with-go-generics/)
- [Reddit thread about performance (see comments)](https://old.reddit.com/r/golang/comments/zxkuun/gos_unreachable_performance_limitation/)
- [Reddit thread: goland vs vscode](https://old.reddit.com/r/golang/comments/z9lb46/goland_vs_vscode/)
- [Dave Cheney's blog (language contributor)](https://dave.cheney.net/practical-go)
- ['Package Driven' Design Article](https://www.ardanlabs.com/blog/2017/02/package-oriented-design.html)
- [Common things that come up in code review](https://github.com/golang/go/wiki/CodeReviewComments)
- [Lies we tell ourselves to keep using golang](https://fasterthanli.me/articles/lies-we-tell-ourselves-to-keep-using-golang#go-is-an-island)
- [How I write HTTP services in Go after 13 years](https://news.ycombinator.com/item?id=39318867)
