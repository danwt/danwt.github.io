---
layout: post
title:  "Coding with data, not if statements"
date:   2023-10-16T00:00:00+00:00
tags: [algorithms]
published: false
---

When you code you should try to eliminate unnecessary extra code and branching pathways by making the most of existing pathways, and using data

For example, if you have a function to do Foo either immediately, or with a delay, instead of writing

f(x){
    if mustDelay(x){
        scheduleFoo(5 seconds)
    }
    Foo()
}

you can do 

f(x){
    if mustDelay(x){
        scheduleFoo(5 seconds)
    }
    scheduleFoo(0 seconds)
}

which essentially simplifies the code, and reasoning since now there is only one path 'f->scheduleFoo->foo' instead of two 

